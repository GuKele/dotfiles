# open a new pane or window with the current directory of the current pane, not the directory in which the first tmux session was started.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
tmux_conf_new_pane_retain_current_path=true
tmux_conf_new_window_retain_current_path=true
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g default-shell /usr/bin/zsh

unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind-key C-a send-prefix
bind r source-file ~/.tmux.conf


# Secondary prefix
# set -g prefix2 C-b
# bind-key C-b send-prefix -2

# open mouse options
set -g mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on


# {last} !       The last (previously active) pane
# {next} +       The next pane by number
# {previous} -   The previous pane by number
# {top}          The top pane
# {bottom}       The bottom pane
# {left}         The leftmost pane
# {right}        The rightmost pane
# {top-left}     The top-left pane
# {top-right}    The top-right pane
# {bottom-left}  The bottom-left pane
# {bottom-right} The bottom-right pane
# {up-of}        The pane above the active pane
# {down-of}      The pane below the active pane
# {left-of}      The pane to the left of the active pane
# {right-of}     The pane to the right of the active pane

# swap pane
bind-key -n C-M-Up swap-pane -U
bind-key -n C-M-Down swap-pane -D
bind-key -n C-M-Left swap-pane -s '{left-of}'
bind-key -n C-M-Right swap-pane -s '{right-of}'
# sele pane
# bind-key -n M-Up select-pane -U
# bind-key -n M-Down select-pane -D
# bind-key -n M-Left select-pane -L
# bind-key -n M-Right select-pane -R

# select window
# bind-key j previous-window
# bind-key i select-window -t 1
# bind-key k last-window
# bind-key l next-window
# bind-key -n C-Tab next-window
# bind-key -n C-S-Tab previous-window

# #  Use vi key bindings in tmux.
# set -g mode-keys vi
# # set things up so that v starts a selection and y finishes it in the same way that Space and Enter do, more like Vim:
# bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# # Toggle prefix sending with <prefix t> useful for nested sessions
# unbind-key t
# bind -T root F12  \
#   set prefix None \;\
#   set key-table off \;\
#   # set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
#   # set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#   # set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
#   if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#   refresh-client -S \;\

# bind -T off F12 \
#   set -u prefix \;\
#   set -u key-table \;\
#   # set -u status-style \;\
#   # set -u window-status-current-style \;\
#   # set -u window-status-current-format \;\
#   refresh-client -S

# wg_is_keys_off="#[fg=colour231,bg=colour04]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"


# set -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M

set-option -s set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip"

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
# set -g visual-activity off
# set -g visual-bell off
# set -g visual-silence off
# setw -g monitor-activity off
# set -g bell-action none


# #####################################################
# # Smart pane switching with awareness of Vim splits.

# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l


# # NVIM
# set-option -sg escape-time 10
# set-option -sa terminal-overrides ',xterm-256color:RGB'
# set-option -ga terminal-overrides ',xterm-256color:Tc'

# # VIM : vim-tmux-clipboard plugin https://github.com/roxma/vim-tmux-clipboard?utm_source=recordnotfound.com
# set -g focus-events on

# # History
set -g history-file ~/.tmux/.tmux_history
set -g history-limit 100000

# set-option -gw xterm-keys on

# bind-key -n C-S-h previous-window
# bind-key -n C-S-j last-window
# bind-key -n C-S-k last-window
# bind-key -n C-S-l next-window

# bind-key -n C-Tab next-window
# bind-key -n C-S-Tab previous-window

# bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
# bind-key -n C-S-Right swap-window -t +1\; select-window -t +1


# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'

# # set -g @colors-base16 'monokai'
# set -g @colors-base16 'gruvbox-dark-hard'

# statusbar
set -g status-position top
set -g status-justify left # 状态栏左对齐
set -g status-style 'bg=blue fg=colour233,bold' # 状态栏背景和文本颜色
set -g status-interval 10 # 刷新时间
set -g status-right-length 50 # 状态栏右侧长度
set -g status-left-length 20 # 状态栏左侧长度
set -g status-right '#[default] #[fg=colour233,bg=colour245,bold]  %H:%M:%S  '
# set -g status-left ' '

# window
# #I是窗口号 #W是窗口名字 #F是窗口的活动标志，可以单独给任意字符配置bg和fg
setw -g window-status-format "#[default] #[fg=grey,dim][#I]:#W#F"
setw -g window-status-current-format '#[default] #[bg=#8080D7,fg=colour233,bold][#I]:#W#F'
set -g base-index 1 # 窗口编号从 1 开始计数
set -g renumber-windows on # 关掉某个窗口后，编号重排

# #  modes
# setw -g clock-mode-colour colour135
# setw -g mode-style 'fg=colour196 bg=colour238 bold'

# # panes
# set -g pane-border-style 'fg=colour238 bg=colour235'
# set -g pane-active-border-style 'fg=colour208 bg=colour236'
set -g pane-base-index 1 # 窗格编号从 1 开始计数

# # messages
# set -g message-style 'fg=colour232 bg=colour166 bold'
# set -g message-command-style 'fg=blue bg=black'


#============================================================================
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'Morantron/tmux-fingers'
# set -g @plugin 'mattdavis90/base16-tmux'


# tmux prefix highlight configurations
# set -g status-left '#{prefix_highlight} #[fg=colour231,bg=colour04]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')'
set -g status-left '#{prefix_highlight}'
set -g @prefix_highlight_fg 'black bold' # default is 'colour231'
set -g @prefix_highlight_bg '#74B357' # '#F78D26' # default is 'colour04'

set -g @prefix_highlight_show_copy_mode 'on'
# set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_show_sync_mode 'on'
# set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=green' # default is 'fg=default,bg=yellow'

set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_sync_prompt 'Sync'

set -g @prefix_highlight_output_prefix ' [' # 前缀包裹
set -g @prefix_highlight_output_suffix '] '


# tmux continuum configurations
# set -g @continuum-restore 'on'

# tmux yank configurations
set -g @yank_with_mouse on
set -g @yank_selection_mouse 'primary' # 'clipboard' or 'secondary'

# install tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
